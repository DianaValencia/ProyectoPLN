((Iniciar (BEGIN))(. (.)))((Asignar_a (ASIG_A))(A (VAR))(, (,))(5 (VALUE))(. (.)))((Asignar_a (ASIG_A))(B (VAR))(, (,))(5 (VALUE))(por (OPER))(A (VAR))(. (.)))((Asignar_a (ASIG_A))(A (VAR))(, (,))(B (VAR))(dividido_por (OPER))(2 (VALUE))(. (.)))((Asignar_a (ASIG_A))(B (VAR))(, (,))(B (VAR))(dividido_entre (OPER))(A (VAR))(. (.)))((Si (COND))(A (VAR))(es_diferente_a (COMP))(B (VAR))(. (.)))((Mientras (LOOP_COND))(X (VAR))(sea_menor_que (COMP))(10 (VALUE))(. (.)))((Asignar_a (ASIG_A))(X (VAR))(, (,))(X (VAR))(mas (OPER))(1 (VALUE))(. (.)))((Sino (COND_ELS))(, (,))(Repita (LOOP))(Asignar_a (ASIG_A))(X (VAR))(, (,))(X (VAR))(menos (OPER))(1 (VALUE))(. (.)))((Hasta_que (LOOP_COND))(X (VAR))(sea_igual_a (COMP))(0 (VALUE))(. (.)))((Para (LOOP))(X (VAR))(desde (LOOP_FROM))(1 (NN))(hasta (LOOP_TO))(10 (NN))(. (.)))((Asignar_a (ASIG_A))(A (VAR))(, (,))(B (VAR))(modulo (OPER))(X (VAR))(. (.)))((En_Caso_que (COND_MULT))(A (VAR))(es_igual_a (COMP))(0 (VALUE))(. (.)))((Asignar_a (ASIG_A))(B (VAR))(, (,))(B (VAR))(mas (OPER))(1 (VALUE))(. (.)))((Sino (COND_ELS))(, (,))(Asignar_a (ASIG_A))(B (VAR))(, (,))(B (VAR))(menos (OPER))(1 (VALUE))(. (.)))((Terminar (END))(. (.)))(